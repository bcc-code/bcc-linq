name: Publish to nuget
on:
  push:
    branches: [ main ]
    paths:
      - "src/**"
      - ".github/workflows/nuget-package-publish.yml"
  
  pull_request:
    branches: [ main ]
    paths:
      - "src/**"
      - ".github/workflows/nuget-package-publish.yml"

  workflow_dispatch:

env:
  API_KEY: ${{ secrets.NUGET_PACKAGES_GITHUB_API_KEY }}
  CSPROJ_PATH: src/RuleFilterParser/RuleFilterParser.csproj

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.*

      - name: Running dotnet format
        run: |
          dotnet tool install -g dotnet-format --version "7.*" --add-source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet7/nuget/v3/index.json
          dotnet format

      - name: Set Environment Variables
        uses: ./.github/actions/setvars
        with:
          varFilePath: ./.github/variables/version.env

      - name: Set package version
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' && $GITHUB_EVENT_NAME == 'push' ]]; then
             echo "VERSION=${{ env.NUGET_PACKAGE_VERSION_BASE }}.${{ github.run_number}}" >> "$GITHUB_ENV"
          else
             echo "VERSION=${{ env.NUGET_PACKAGE_VERSION_BASE }}.${{ github.run_number}}-beta" >> "$GITHUB_ENV"
          fi
          
      - name: Run Tests
        run: dotnet test

      - name: Package
        run: dotnet pack -p:PackageVersion=${{ env.VERSION }} -c Release -o . ${{ env.CSPROJ_PATH }}

      - name: Publish
        run: dotnet nuget push *.nupkg -k ${{ env.API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate
        